[{"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\index.js":"1","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\reportWebVitals.js":"2","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\App.js":"3","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\navigationBar.jsx":"4","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\homepage.jsx":"5","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\myCharacter.jsx":"6","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\control.jsx":"7","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\OtherCharacters.jsx":"8","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\Actions.jsx":"9","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\config.js":"10","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\NewAction.jsx":"11","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\SelectedAction.jsx":"12","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\ActionList.jsx":"13","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\ModifyCharacter.jsx":"14","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\AddAsset.jsx":"15","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\ModifyMemory.jsx":"16","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\ControlTerminal.jsx":"17","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\Registration.jsx":"18","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\SelectedProject.jsx":"19","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\store.js":"20","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\configureStore.js":"21","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\reducer.js":"22","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\middleware\\api.js":"23","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\middleware\\toast.js":"24","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\playerActions.js":"25","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\characters.js":"26","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\auth.js":"27","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\api.js":"28","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\gamestate.js":"29","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\socket.js":"30","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\Login.jsx":"31","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\assets.js":"32","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\notFound.jsx":"33","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\loading.jsx":"34","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\initUpdate.js":"35"},{"size":694,"mtime":1612519622583,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":3552,"mtime":1614584095946,"results":"39","hashOfConfig":"37"},{"size":3107,"mtime":1613892114188,"results":"40","hashOfConfig":"37"},{"size":2570,"mtime":1614582735272,"results":"41","hashOfConfig":"37"},{"size":13748,"mtime":1613783735035,"results":"42","hashOfConfig":"37"},{"size":5556,"mtime":1614160515143,"results":"43","hashOfConfig":"37"},{"size":11258,"mtime":1614159424213,"results":"44","hashOfConfig":"37"},{"size":4093,"mtime":1613894805210,"results":"45","hashOfConfig":"37"},{"size":204,"mtime":1610142436997,"results":"46","hashOfConfig":"37"},{"size":5436,"mtime":1613783735035,"results":"47","hashOfConfig":"37"},{"size":12956,"mtime":1614583995185,"results":"48","hashOfConfig":"37"},{"size":2772,"mtime":1614563664745,"results":"49","hashOfConfig":"37"},{"size":5501,"mtime":1614159714932,"results":"50","hashOfConfig":"37"},{"size":3347,"mtime":1613783735035,"results":"51","hashOfConfig":"37"},{"size":5785,"mtime":1612746931439,"results":"52","hashOfConfig":"37"},{"size":13885,"mtime":1614562554416,"results":"53","hashOfConfig":"37"},{"size":4704,"mtime":1612687379751,"results":"54","hashOfConfig":"37"},{"size":6015,"mtime":1613783735035,"results":"55","hashOfConfig":"37"},{"size":151,"mtime":1613894077524,"results":"56","hashOfConfig":"37"},{"size":509,"mtime":1612428550891,"results":"57","hashOfConfig":"37"},{"size":474,"mtime":1612579400452,"results":"58","hashOfConfig":"37"},{"size":1018,"mtime":1613895448661,"results":"59","hashOfConfig":"37"},{"size":183,"mtime":1612428550980,"results":"60","hashOfConfig":"37"},{"size":3769,"mtime":1614579492511,"results":"61","hashOfConfig":"37"},{"size":2359,"mtime":1614381962786,"results":"62","hashOfConfig":"37"},{"size":2683,"mtime":1613943616264,"results":"63","hashOfConfig":"37"},{"size":238,"mtime":1612428550886,"results":"64","hashOfConfig":"37"},{"size":2037,"mtime":1614381912241,"results":"65","hashOfConfig":"37"},{"size":150,"mtime":1613943745302,"results":"66","hashOfConfig":"37"},{"size":3053,"mtime":1614584453601,"results":"67","hashOfConfig":"37"},{"size":2533,"mtime":1614381962786,"results":"68","hashOfConfig":"37"},{"size":1976,"mtime":1614297019439,"results":"69","hashOfConfig":"37"},{"size":11703,"mtime":1614584453601,"results":"70","hashOfConfig":"37"},{"size":901,"mtime":1614571415167,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"13pxyo7",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\index.js",[],["147","148"],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\App.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\navigationBar.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\homepage.jsx",["149","150"],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\myCharacter.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\control.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\OtherCharacters.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\Actions.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\config.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\NewAction.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\SelectedAction.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\ActionList.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\ModifyCharacter.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\AddAsset.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\ModifyMemory.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\ControlTerminal.jsx",["151"],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\Registration.jsx",["152"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Content, Container, Sidebar, PanelGroup, Panel, Input, FlexboxGrid, List, Alert, SelectPicker, Footer, Button } from 'rsuite';\r\nimport { gameServer } from '../../config';\r\n\r\nclass Registration extends Component {\r\n\tstate = { \r\n\t\tusers: [],\r\n\t\tcharacters: [],\r\n\t\tfiltered: [],\r\n\t\tslected: null,\r\n\t\ttarget: null\r\n\t }\r\n\r\n\t componentDidMount = async () => {\r\n\t\ttry{\r\n\t\t\tconst existingUsernames = [];\r\n\t\t\tfor (const character of this.props.characters) {\r\n\t\t\t\tif (!existingUsernames.some(el => el === character.username )) existingUsernames.push(character.username);\r\n\t\t\t}\r\n\t\t\tconst {data} = await axios.get(`https://nexus-central-server.herokuapp.com/api/users/`);\r\n\r\n\t\t\tconst filteredUsers = [];\r\n\t\t\tfor (const user of data) {\r\n\t\t\t\tif (!existingUsernames.some(el => el === user.username )) filteredUsers.push(user);\r\n\t\t\t}\r\n\t\t//\tAlert.success('Asset Successfully Deleted');\r\n\t\t\tthis.setState({ users: filteredUsers, filtered: filteredUsers});\r\n\t\t}\r\n\t\tcatch (err) {\r\n      Alert.error(`Error: ${err.response.data}`, 5000);\r\n\t\t}\t\r\n\t }\r\n\r\n\t listStyle (item) {\r\n\t\tif (item === this.state.selected) {\r\n\t\t\treturn ({cursor: 'pointer', backgroundColor: \"#212429\"})\r\n\t\t}\r\n\t\telse return ({cursor: 'pointer'})\r\n\t}\r\n\r\n\r\n\trender() { \r\n\t\treturn ( \r\n\t\t\t<Container>\r\n\t\t\t\t<Sidebar style={{backgroundColor: \"black\"}}>\r\n\t\t\t\t\t<PanelGroup>\t\t\t\t\t\r\n\t\t\t\t\t\t<Panel style={{ backgroundColor: \"#000101\"}}>\r\n\t\t\t\t\t\t\t<Input onChange={(value)=> this.filter(value)} placeholder=\"Search\"></Input>\r\n\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t<Panel bodyFill style={{height: 'calc(100vh - 130px)', borderRadius: '0px', overflow: 'auto', scrollbarWidth: 'none', borderRight: '1px solid rgba(255, 255, 255, 0.12)' }}>\t\t\r\n\t\t\t\t\t\t\t<List>\t\t\t\r\n\t\t\t\t\t\t\t\t\t{this.state.filtered.sort((a, b) => { // sort the catagories alphabetically \r\n\t\t\t\t\t\t\t\t\t\tif(a.name.first < b.name.first) { return -1; }\r\n\t\t\t\t\t\t\t\t\t\tif(a.name.first > b.name.first) { return 1; }\r\n\t\t\t\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t\t\t\t}).map((user, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<List.Item key={index} index={index} onClick={() => this.setState({ selected: user })} style={this.listStyle(user)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={16} style={{...styleCenter, flexDirection: 'column', alignItems: 'flex-start', overflow: 'hidden'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b style={titleStyle}>{user.name.first} {user.name.last}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b style={slimText}>{user.email}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</List>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Panel>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</PanelGroup>\r\n\t\t\t\t</Sidebar>\r\n\t\t\t\t{this.state.selected &&\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Content>\r\n\t\t\t\t\t\t<Panel style={{padding: \"0px\", textAlign: \"left\", backgroundColor: \"#15181e\"}}>\r\n\t\t\t\t\t\t\t<h3 style={{textAlign: \"center\"}}> {this.state.selected.name.first} {this.state.selected.name.last} </h3>\t\r\n\t\t\t\t\t\t\t<h5 style={{textAlign: \"center\"}}> {this.state.selected.email} </h5>\t\r\n\t\t\t\t\t\t\t<b>Username: {this.state.selected.username} </b>\r\n\t\t\t\t\t\t\t<SelectPicker placeholder=\"Select a Character\" onChange={(event) => this.setState({ target: event })} block groupBy='tag' valueKey='_id' labelKey='characterName' data={this.props.characters}/>\t\t\t\r\n\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t<Panel>\r\n\t\t\t\t\t\t\t<Button disabled={(!this.state.target)} onClick={()=> this.handleReg()} >Register this Player!</Button>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t</Content>\t\t\t\t\t\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t\t</Container>\r\n\t\t );\r\n\t}\r\n\r\n\tfilter = (fil) => {\r\n\t\tconst filtered = this.state.users.filter(user => user.name.first.toLowerCase().includes(fil.toLowerCase()) ||\r\n\t\tuser.name.last.toLowerCase().includes(fil.toLowerCase()) ||\r\n\t\tuser.email.toLowerCase().includes(fil.toLowerCase()));\r\n\t\tthis.setState({ filtered });\r\n\t}\r\n\r\n\thandleReg = async () => {\r\n\t\tconst data = {\r\n\t\t\tcharacter: this.state.target,\r\n\t\t\tusername: this.state.selected.username,\r\n\t\t}\r\n\t\ttry{\r\n\t\t\tawait axios.patch(`${gameServer}api/characters/register`, { data });\r\n\t\t\tAlert.success('User successfully given their character');\r\n\t\t\tthis.setState({ selected: null, target: null });\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.log(err)\r\n      Alert.error(`Error: ${err}`, 5000);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nconst styleCenter = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '60px'\r\n};\r\n\r\nconst titleStyle = {\r\n  whiteSpace: 'nowrap',\r\n  fontWeight: 500,\r\n\tpaddingLeft: 2\r\n};\r\n\r\nconst slimText = {\r\n  fontSize: '0.966em',\r\n  color: '#97969B',\r\n  fontWeight: 'lighter',\r\n\tpaddingBottom: 5,\r\n\tpaddingLeft: 2\r\n};\r\n\r\nexport default Registration;",["153","154"],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\SelectedProject.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\store.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\configureStore.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\reducer.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\middleware\\api.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\middleware\\toast.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\playerActions.js",["155"],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\characters.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\auth.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\api.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\gamestate.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\socket.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\Login.jsx",["156","157"],"import React, { useEffect } from 'react'; // React imports\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, ControlLabel, Form, FormControl, FormGroup, Modal, Schema } from 'rsuite';\r\nimport { loadAssets } from '../redux/entities/assets';\r\nimport { authReceived, loginUser } from '../redux/entities/auth';\r\nimport { loadCharacters } from '../redux/entities/characters';\r\nimport { loadGamestate } from '../redux/entities/gamestate';\r\nimport { loadplayerActions } from '../redux/entities/playerActions';\r\nconst { StringType } = Schema.Types;\r\n\r\nconst Login = props => {\r\n\tlet { login, tokenLogin, loadAction, user } = props;\r\n    const [errors, setErrors] = React.useState({});\r\n    const [formValue, setFormValue] = React.useState({ email: '', password: '',});\r\n\r\n\tconst history = useHistory();\r\n\t\r\n\t// console.log('Mounting App...')\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tlet token = localStorage.getItem('token');\r\n\t\tif (token && login === false) {\r\n\t\t\ttokenLogin(token);\r\n\t\t} \r\n\t}, [login, tokenLogin])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (login) {\r\n\t\t\tloadAction(user);\r\n\t\t\thistory.push('/home');\r\n\t\t}\r\n\t}, [login, user, loadAction, history])\r\n\r\n\r\n\r\n    return ( \r\n\t\t<Modal backdrop=\"static\" show={true}>\r\n\t\t<Modal.Header>\r\n\t\t\t<Modal.Title>Login</Modal.Title>\r\n\t\t</Modal.Header>\r\n\t\t<Modal.Body>\r\n\t\t\t<Form model={model} fluid formValue={formValue} onChange={form => setFormValue(form)}>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>Email / Username</ControlLabel>\r\n\t\t\t\t\t<FormControl errorMessage={props.error} errorPlacement='topEnd' name=\"email\" accepter={model.accepter}/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t<FormControl errorMessage={props.error} errorPlacement='topEnd' name=\"password\" type=\"password\" />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</Form>\r\n\t\t</Modal.Body>\r\n\t\t<Modal.Footer>\r\n\t\t\t<Button loading={props.loading} onClick={() => {\r\n                props.handleLogin({ user: formValue.email, password: formValue.password })\r\n                }} appearance=\"primary\">\r\n\t\t\t\tSubmit\r\n\t\t\t</Button>\r\n\t\t</Modal.Footer>\r\n\t</Modal> \r\n\t);\r\n}\r\n\r\nconst model = Schema.Model({\r\n    email: StringType()\r\n    .isRequired('This field is required.')\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\tlogin: state.auth.login,\r\n\terror: state.auth.error,\r\n\tuser: state.auth.user,\r\n\tloading: state.auth.loading,\r\n\tactionsLast: state.actions.lastFetch,\r\n\tassetsLast: state.assets.lastFetch,\r\n\tcharactersLast: state.characters.lastFetch,\r\n\tgamestateLast: state.gamestate.lastFetch,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\thandleLogin: (data) => dispatch(loginUser(data)),\r\n\ttokenLogin: (data) => dispatch(authReceived(data)),\r\n\tloadChar: (data) => dispatch(loadCharacters()),\r\n\tloadAction: (data) => dispatch(loadplayerActions(data)),\r\n\tloadAssets: (data) => dispatch(loadAssets()),\r\n\tloadGamestate: (data) => dispatch(loadGamestate())\r\n\t// updateUser: (user) => dispatch(updateUser({ user }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\entities\\assets.js",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\notFound.jsx",["158"],"import React, { useEffect } from 'react';\r\nimport { Button, Content, Header } from 'rsuite';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  const [seconds, setSeconds] = React.useState(25);\r\n  const [startBool, setStart] = React.useState(false);\r\n\tconst history = useHistory()\r\n\r\n  const start = () => {\r\n    setStart(startBool => startBool = true);\r\n    const audio = new Audio('/fanfare.mp3');\r\n    audio.loop = false;\r\n    audio.play();  \r\n\r\n    const interval = setInterval(() => {\r\n      if (seconds > 1300) {\r\n        clearInterval(interval);\r\n      }\r\n      else \r\n        setSeconds(seconds => seconds + 2);\r\n    }, 50);\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  \r\n  return ( \r\n\t\t<React.Fragment>\r\n\r\n      {!startBool && <Header style={{position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n        <Button appearance={'ghost'} onClick={()=> start()}>Click Me</Button>\r\n      </Header>}\r\n      {startBool && <Content style={{position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\" width={seconds > 1050 ? 1050: seconds} viewBox=\"0 0 1211 495\">\r\n          <defs>\r\n         </defs>\r\n         <text transform=\"translate(605 487) scale(11.91)\" style={{fontSize:' 60px'}}><tspan x=\"0\" style={{ fontSize:' 60px', fill: '#fff', textAnchor: 'middle', fontFamily: \"Franklin Gothic Medium\" }}>404</tspan></text>\r\n       </svg>\r\n       {seconds >= 1100 && <div style={{ fontSize: '34px', fontWeight: '500',\tcolor: '#fff', lineHeight: '1.4',\tmargin: '0'}}>Looks like something went wrong.</div>}\r\n       {seconds >= 1200 && <Button color='red' size='lg' onClick={()=> history.push('/')} >Take me back!</Button>}\r\n       {seconds >= 1300 && <p>Also I really hope you had audio on...</p> }\r\n      </Content>}\r\n    </React.Fragment>\r\n\t)\r\n}\r\n \r\nexport default NotFound;","C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\components\\navigation\\loading.jsx",[],"C:\\Users\\Scott.000\\Documents\\GitHub\\afterlife-app\\reactapp\\src\\redux\\initUpdate.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":3,"column":73,"nodeType":"165","messageId":"166","endLine":3,"endColumn":84},{"ruleId":"163","severity":1,"message":"167","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":24},{"ruleId":"163","severity":1,"message":"168","line":358,"column":9,"nodeType":"165","messageId":"166","endLine":358,"endColumn":17},{"ruleId":"163","severity":1,"message":"169","line":3,"column":105,"nodeType":"165","messageId":"166","endLine":3,"endColumn":111},{"ruleId":"159","replacedBy":"170"},{"ruleId":"161","replacedBy":"171"},{"ruleId":"163","severity":1,"message":"172","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":14},{"ruleId":"163","severity":1,"message":"173","line":14,"column":12,"nodeType":"165","messageId":"166","endLine":14,"endColumn":18},{"ruleId":"163","severity":1,"message":"174","line":14,"column":20,"nodeType":"165","messageId":"166","endLine":14,"endColumn":29},{"ruleId":"163","severity":1,"message":"175","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'FlexboxGrid' is defined but never used.","Identifier","unusedVar","'getMyCharacter' is defined but never used.","'filtered' is assigned a value but never used.","'Footer' is defined but never used.",["176"],["177"],"'socket' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]